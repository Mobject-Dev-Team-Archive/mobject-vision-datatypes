<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="_ETcVnInterpolationType" Id="{019d4e34-27a1-430f-a214-7449353cc676}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnInterpolationType EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnInterpolationType;
	activeData : REFERENCE TO ETcVnInterpolationType;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{19fc23c2-9062-4ccc-b5a2-7f98ef271b40}" />
    <Folder Name="Private" Id="{2d1c4cea-384d-4104-b5a8-aefb4f15ef51}" />
    <Folder Name="Protected" Id="{0444251e-07af-4fb1-84da-eae3f7d20a17}" />
    <Method Name="AddLocalEnumeration" Id="{7e2f9adc-da99-4f0c-9e27-878cbfbdaa8f}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnInterpolationType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{c9bf2433-2f81-4797-be98-2b56cfd138dc}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{6cf79caa-f519-4f55-8c13-b9b06b2063dc}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{8c44a6c8-1510-4ba8-b0ab-ed639a216418}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{876b8ea5-872b-4032-8c9e-4cbf4bee10a1}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnInterpolationType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnInterpolationType(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{2be5c705-5e2f-4ef1-b49c-cd4603ac23ff}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnInterpolationType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_IT_NEAREST_NEIGHBOR', ETcVnInterpolationType.TCVN_IT_NEAREST_NEIGHBOR);
AddLocalEnumeration('TCVN_IT_BILINEAR', ETcVnInterpolationType.TCVN_IT_BILINEAR);
AddLocalEnumeration('TCVN_IT_BICUBIC', ETcVnInterpolationType.TCVN_IT_BICUBIC);
AddLocalEnumeration('TCVN_IT_AREA_BASED', ETcVnInterpolationType.TCVN_IT_AREA_BASED);
AddLocalEnumeration('TCVN_IT_LANCZOS4', ETcVnInterpolationType.TCVN_IT_LANCZOS4);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{79af02ea-90f6-49e9-9880-6de1035da6b9}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{82b081d7-a8f4-4010-8427-9690ec38d3f7}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnInterpolationType';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{a2d2443c-4e01-46bc-b56d-3f6adb10ea8a}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnInterpolationType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{e13abcb2-b240-40b5-8665-9b1593fb1c23}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnInterpolationType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{5cf864ae-bbe9-4902-9644-bcc8c5325c70}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{4428a56c-2474-4253-ad87-b7e43e9fdb7f}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{f7a1c84f-c1d2-43f5-a322-1dae1c642563}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{bb739a99-bde5-49e2-b10b-71d8b44a29e9}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnInterpolationType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{dd29573e-5c94-46b8-a73e-82b1a55773de}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnInterpolationType]]></Declaration>
      <Get Name="Get" Id="{a91f0af8-1071-4a04-83ee-9268dd650111}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{04460000-c4c7-4aeb-ba55-8c1b630256bb}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>