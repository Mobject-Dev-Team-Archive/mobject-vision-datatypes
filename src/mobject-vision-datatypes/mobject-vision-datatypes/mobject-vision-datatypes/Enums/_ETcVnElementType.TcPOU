<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="_ETcVnElementType" Id="{d12e0525-9dd8-4d9d-b134-04d0f62aea15}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnElementType EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnElementType;
	activeData : REFERENCE TO ETcVnElementType;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{7d60ae5b-e221-4121-87bb-381cad50e32d}" />
    <Folder Name="Private" Id="{4ae82742-c72b-4282-9b6e-e21cf724ea7b}" />
    <Folder Name="Protected" Id="{14717fbd-c83f-4aac-b2b2-168cf1e45579}" />
    <Method Name="AddLocalEnumeration" Id="{a62627db-f9d6-45ee-a364-5bcaa9028058}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnElementType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{748e8b1c-e600-4b7f-9992-431b82c0a864}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{6d37b70e-ab04-4863-99fb-b00ef479e691}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{971e8e36-f7b6-48ae-87c8-179ec7fc6340}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{4878d86a-885c-4e20-85c3-01833648caf4}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnElementType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnElementType(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{e9db9fb7-33db-4058-a1c4-b073ec22b7b7}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnElementType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_ET_SAME_AS_SOURCE', ETcVnElementType.TCVN_ET_SAME_AS_SOURCE);
AddLocalEnumeration('TCVN_ET_USINT', ETcVnElementType.TCVN_ET_USINT);
AddLocalEnumeration('TCVN_ET_SINT', ETcVnElementType.TCVN_ET_SINT);
AddLocalEnumeration('TCVN_ET_UINT', ETcVnElementType.TCVN_ET_UINT);
AddLocalEnumeration('TCVN_ET_INT', ETcVnElementType.TCVN_ET_INT);
AddLocalEnumeration('TCVN_ET_DINT', ETcVnElementType.TCVN_ET_DINT);
AddLocalEnumeration('TCVN_ET_REAL', ETcVnElementType.TCVN_ET_REAL);
AddLocalEnumeration('TCVN_ET_LREAL', ETcVnElementType.TCVN_ET_LREAL);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{8d841011-5022-40ed-bc19-6080d836bf38}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{6b89d3e7-4da6-464c-9465-eed4d41d2352}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnElementType';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{2266728e-6068-4865-bd44-830b787f2c4f}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnElementType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{57052867-75de-4757-8239-e7f3d4aac145}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnElementType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{a7247090-e09b-4bad-90de-d8ea04f06fb3}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{d11bc9e4-e0a2-4142-9ad8-6d061397610c}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{33980929-1d78-448a-a289-df9c6b710365}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{1ef6ac3f-969c-46e8-8bee-d187ba11a376}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnElementType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{5346c1d5-bcc6-4e8a-892f-9b0fb5f544f8}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnElementType]]></Declaration>
      <Get Name="Get" Id="{493d37ad-1950-4bae-ba59-cfeca0bc78f1}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{95a81fd9-d9b7-4627-a0c5-e9252ecb9281}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>