<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="_ETcVnThresholdType" Id="{1d0ab751-3362-419a-b3a6-b3a2c8c7c32c}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnThresholdType EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnThresholdType;
	activeData : REFERENCE TO ETcVnThresholdType;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{24ce8b75-d8e3-4274-9759-32163c92b64b}" />
    <Folder Name="Private" Id="{bd6d15df-8537-479f-84c4-1d3cbb420018}" />
    <Folder Name="Protected" Id="{7b464f78-1b4f-42c5-8fcb-05e68042021e}" />
    <Method Name="AddLocalEnumeration" Id="{c917d9e1-9929-4a03-9cf4-c3dbd43165fe}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnThresholdType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{45e5449e-77d4-491e-b6a9-39b59b9c0937}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{6b4be9b9-0e95-44b5-9183-8e2e758e7740}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{adbc323b-fc4e-4075-855c-1809bc06101b}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{836e16c4-9932-4ec4-82d0-d06d9379e20f}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnThresholdType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnThresholdType(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{59d8a36d-a975-443b-a6fd-ba18cf9e7c9e}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnThresholdType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_TT_BINARY', ETcVnThresholdType.TCVN_TT_BINARY);
AddLocalEnumeration('TCVN_TT_BINARY_INV', ETcVnThresholdType.TCVN_TT_BINARY_INV);
AddLocalEnumeration('TCVN_TT_TRUNC', ETcVnThresholdType.TCVN_TT_TRUNC);
AddLocalEnumeration('TCVN_TT_TOZERO', ETcVnThresholdType.TCVN_TT_TOZERO);
AddLocalEnumeration('TCVN_TT_TOZERO_INV', ETcVnThresholdType.TCVN_TT_TOZERO_INV);
AddLocalEnumeration('TCVN_TT_OTSU_BINARY', ETcVnThresholdType.TCVN_TT_OTSU_BINARY);
AddLocalEnumeration('TCVN_TT_OTSU_BINARY_INV', ETcVnThresholdType.TCVN_TT_OTSU_BINARY_INV);
AddLocalEnumeration('TCVN_TT_OTSU_TRUNC', ETcVnThresholdType.TCVN_TT_OTSU_TRUNC);
AddLocalEnumeration('TCVN_TT_OTSU_TOZERO', ETcVnThresholdType.TCVN_TT_OTSU_TOZERO);
AddLocalEnumeration('TCVN_TT_OTSU_TOZERO_INV', ETcVnThresholdType.TCVN_TT_OTSU_TOZERO_INV);
AddLocalEnumeration('TCVN_TT_TRIANGLE_BINARY', ETcVnThresholdType.TCVN_TT_TRIANGLE_BINARY);
AddLocalEnumeration('TCVN_TT_TRIANGLE_BINARY_INV', ETcVnThresholdType.TCVN_TT_TRIANGLE_BINARY_INV);
AddLocalEnumeration('TCVN_TT_TRIANGLE_TRUNC', ETcVnThresholdType.TCVN_TT_TRIANGLE_TRUNC);
AddLocalEnumeration('TCVN_TT_TRIANGLE_TOZERO', ETcVnThresholdType.TCVN_TT_TRIANGLE_TOZERO);
AddLocalEnumeration('TCVN_TT_TRIANGLE_TOZERO_INV', ETcVnThresholdType.TCVN_TT_TRIANGLE_TOZERO_INV);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{02259d7c-e693-4a6b-95cf-dfcdc70fe5a1}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{03690004-b3d3-47ca-9691-0dad3305a03a}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnThresholdType';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{79fa1ccb-4c3d-466c-956f-7d95a6a98661}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnThresholdType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{c46027f0-a505-4eb3-aa24-2d7613ac4fad}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnThresholdType;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{ea5fafca-957a-4a1d-9995-ca5edbbd7b62}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{b0482a35-2bb8-4e03-9ffe-475553727825}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{457a7d7f-26cf-4a92-a603-dc09a5c8b28e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{ef9f4ffc-cfa1-47cf-b206-0c8dd7c07e65}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnThresholdType;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{b9a8439a-7747-4eff-b368-c2446509c16f}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnThresholdType]]></Declaration>
      <Get Name="Get" Id="{f3f1e929-12be-434c-97cd-6f7aca54a042}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{84f8a703-2e6c-45bc-af01-293e7886b8cb}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>