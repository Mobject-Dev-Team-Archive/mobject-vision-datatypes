<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="_ETcVnColorMap" Id="{6f9103dd-e289-0592-3605-6b397d3154cc}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'linkalways'} 
{attribute 'no_explicit_call' := 'This FB is a CLASS and must be accessed using methods or properties'}
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK _ETcVnColorMap EXTENDS EnumDatatypeBase
VAR
	localData : ETcVnColorMap;
	activeData : REFERENCE TO ETcVnColorMap;
	enumBaseDatatype : _DINT(localData);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Constructor" Id="{636c27a9-677d-08c8-3422-6b0e597654b5}" />
    <Folder Name="Private" Id="{c0aa74d3-5956-014d-210d-9d05eb33454a}" />
    <Folder Name="Protected" Id="{e8a1e19c-bb63-052d-1c8c-b00237f39b84}" />
    <Method Name="AddLocalEnumeration" Id="{8ee2138c-1289-0d90-3dbc-28fce34d1d38}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD PRIVATE AddLocalEnumeration
VAR_INPUT
	Enumeration : T_MAXSTRING;
	Value : ETcVnColorMap;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[AddEnumeration(Enumeration, Value);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Address" Id="{a9161c7c-0d89-054a-199c-986ceef13cad}">
      <Declaration><![CDATA[PROPERTY PUBLIC Address : PVOID]]></Declaration>
      <Get Name="Get" Id="{8f5efbce-a497-0dc2-2455-b013f9eff4aa}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Address := ADR(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="ClearReference" Id="{4dd4b53f-7a14-09ad-3260-0016f6171515}">
      <Declaration><![CDATA[METHOD PUBLIC ClearReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= localData;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Clone" Id="{5898b593-b3ca-0c54-035a-48b3e5ee2301}">
      <Declaration><![CDATA[METHOD PUBLIC Clone : I_Datatype
VAR
    pClone : POINTER TO _ETcVnColorMap;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[pClone := __NEW(_ETcVnColorMap(InitialValue := Value));
Clone := pClone^;]]></ST>
      </Implementation>
    </Method>
    <Method Name="FB_init" Id="{5ec75436-02c5-0026-24c5-456f168ea671}" FolderPath="Constructor\">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
	InitialValue : ETcVnColorMap;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[localData := InitialValue;
AddBaseDatatype(enumBaseDatatype);
ClearReference();

AddLocalEnumeration('TCVN_CM_AUTUMN', ETcVnColorMap.TCVN_CM_AUTUMN);
AddLocalEnumeration('TCVN_CM_BONE', ETcVnColorMap.TCVN_CM_BONE);
AddLocalEnumeration('TCVN_CM_JET', ETcVnColorMap.TCVN_CM_JET);
AddLocalEnumeration('TCVN_CM_WINTER', ETcVnColorMap.TCVN_CM_WINTER);
AddLocalEnumeration('TCVN_CM_RAINBOW', ETcVnColorMap.TCVN_CM_RAINBOW);
AddLocalEnumeration('TCVN_CM_OCEAN', ETcVnColorMap.TCVN_CM_OCEAN);
AddLocalEnumeration('TCVN_CM_SUMMER', ETcVnColorMap.TCVN_CM_SUMMER);
AddLocalEnumeration('TCVN_CM_SPRING', ETcVnColorMap.TCVN_CM_SPRING);
AddLocalEnumeration('TCVN_CM_COOL', ETcVnColorMap.TCVN_CM_COOL);
AddLocalEnumeration('TCVN_CM_HSV', ETcVnColorMap.TCVN_CM_HSV);
AddLocalEnumeration('TCVN_CM_PINK', ETcVnColorMap.TCVN_CM_PINK);
AddLocalEnumeration('TCVN_CM_HOT', ETcVnColorMap.TCVN_CM_HOT);
AddLocalEnumeration('TCVN_CM_PARULA', ETcVnColorMap.TCVN_CM_PARULA);
AddLocalEnumeration('TCVN_CM_MAGMA', ETcVnColorMap.TCVN_CM_MAGMA);
AddLocalEnumeration('TCVN_CM_INFERNO', ETcVnColorMap.TCVN_CM_INFERNO);
AddLocalEnumeration('TCVN_CM_PLASMA', ETcVnColorMap.TCVN_CM_PLASMA);
AddLocalEnumeration('TCVN_CM_VIRIDIS', ETcVnColorMap.TCVN_CM_VIRIDIS);
AddLocalEnumeration('TCVN_CM_CIVIDIS', ETcVnColorMap.TCVN_CM_CIVIDIS);
AddLocalEnumeration('TCVN_CM_TWILIGHT', ETcVnColorMap.TCVN_CM_TWILIGHT);
AddLocalEnumeration('TCVN_CM_TWILIGHT_SHIFTED', ETcVnColorMap.TCVN_CM_TWILIGHT_SHIFTED);
AddLocalEnumeration('TCVN_CM_TURBO', ETcVnColorMap.TCVN_CM_TURBO);
]]></ST>
      </Implementation>
    </Method>
    <Property Name="Identifier" Id="{6865d3fd-4697-0944-1c2e-22d742d0c4ba}">
      <Declaration><![CDATA[PROPERTY PUBLIC Identifier : T_MAXSTRING]]></Declaration>
      <Get Name="Get" Id="{a5ec5e2f-4c34-0ed3-303f-ee55e3bd426d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Identifier := 'ETcVnColorMap';]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="IsEnumeratorValueEqual" Id="{9957a7c3-ca53-0a3e-1a5e-45e468b1a84d}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD IsEnumeratorValueEqual : BOOL
VAR_INPUT
	Enumerator : I_KeyValueForwardEnumerator;
END_VAR
VAR
	storedValue : ETcVnColorMap;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Enumerator.TryGet(storedValue) THEN
	RETURN;
END_IF

IsEnumeratorValueEqual := storedValue = activeData;]]></ST>
      </Implementation>
    </Method>
    <Method Name="MakeReferenceTo" Id="{3bf7b0c5-7771-0638-3cbf-6e94453384c4}">
      <Declaration><![CDATA[METHOD PUBLIC MakeReferenceTo
VAR_INPUT
	ReferenceTarget : REFERENCE TO ETcVnCalibrationPatternOrigin;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[activeData REF= ReferenceTarget;
SetBaseDatatypeReference();]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetBaseDatatypeReference" Id="{c0bb60e3-6bea-09fc-1aaa-0e215dd75bb8}" FolderPath="Protected\">
      <Declaration><![CDATA[METHOD PROTECTED SetBaseDatatypeReference
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[enumBaseDatatype.MakeReferenceTo(activeData);]]></ST>
      </Implementation>
    </Method>
    <Property Name="Size" Id="{968bc2b1-0ef9-0eb9-16a4-5e47425b0398}">
      <Declaration><![CDATA[PROPERTY PUBLIC Size : UDINT]]></Declaration>
      <Get Name="Get" Id="{e2014357-19b0-0acb-005d-d1d531d0b346}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Size := SIZEOF(activeData);]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="TryMakeReferenceTo" Id="{fdb89085-af6b-0d8c-21a8-444652b7af67}">
      <Declaration><![CDATA[METHOD TryMakeReferenceTo : BOOL
VAR_INPUT
	Target : I_Datatype;
END_VAR
VAR
	targetAsEnum : I_EnumDatatype;
	pTargetData : POINTER TO ETcVnColorMap;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT Target.TryResolveAsEnumDatatype(targetAsEnum) THEN
	RETURN;
END_IF

IF targetAsEnum.Identifier <> Identifier THEN
	RETURN;
END_IF

pTargetData := Target.Address;
activeData REF= pTargetData^;
SetBaseDatatypeReference();
TryMakeReferenceTo := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Property Name="Value" Id="{b43cdb22-317c-0180-2dc9-c14d9574ffbe}">
      <Declaration><![CDATA[PROPERTY PUBLIC Value : ETcVnColorMap]]></Declaration>
      <Get Name="Get" Id="{b2f9aa7b-e7a0-0a15-1749-080368354c53}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[Value := activeData;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{f92af47c-ff4b-084c-25e5-46d11cefe683}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[activeData := Value;]]></ST>
        </Implementation>
      </Set>
    </Property>
  </POU>
</TcPlcObject>